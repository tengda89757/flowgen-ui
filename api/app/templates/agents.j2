# agents.j2
{% macro generate_agents(assistant_nodes) %}
{%- for node in assistant_nodes %}
{%- set class_name = node.data.class %}
{%- set name = node.data.name %}

node_{{ node.id }} = {{ class_name }}(
    name="{{ name }}",
    {%- if node.data.system_message %}
    system_message="""{{ node.data.system_message }}""",
    {%- endif %}
    {%- if node.data.default_instructions %}
    instructions=AssistantAgent.DEFAULT_SYSTEM_MESSAGE,
    {%- elif node.data.instructions %}
    instructions="""{{ node.data.instructions }}""",
    {%- endif %}
    {%- if node.data.max_consecutive_auto_reply %}
    max_consecutive_auto_reply={{ node.data.max_consecutive_auto_reply }},
    {%- endif %}
    {%- if node.data.compress_config %}
    compress_config={{ node.data.compress_config }},
    {%- endif %}
    {%- if node.data.class == 'LLaVAAgent' %}
    llm_config={
        **llm_config,
        "config_list": [{
            "api_key": os.environ["REPLICATE_API_TOKEN"],
            "base_url": "{{ node.data.llava_config.base_url }}",
        }],
    }
    {%- elif node.data.class == 'GPTAssistantAgent' %}
    llm_config={
        **llm_config,
        {%- if node.data.tools %}
        "tools": {{ node.data.tools }},
        {%- endif %}
        {%- if node.data.file_ids %}
        "file_ids": {{ node.data.file_ids }},
        {%- endif %}
        {%- if node.data.assistant_id %}
        "assistant_id": "{{ node.data.assistant_id }}",
        {%- endif %}
    }
    {%- else %}
    llm_config=llm_config,
    {%- endif %}
)

{%- endfor %}
{% endmacro %}