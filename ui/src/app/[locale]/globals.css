@tailwind base;
@tailwind components;
@tailwind utilities;

/* Suppress the default focus expansion effect of Textarea components */
:focus:not([class*='no-outline']) {
  outline: 2px solid transparent;
}

input-sm[type="number"] {
  padding-right: 0 !important;
}

.skeleton {
  @apply bg-base-content/10;
}

::-webkit-scrollbar {
  background-color: transparent;
  width: 4px;
  height: 4px;
}

::-webkit-scrollbar-thumb {
  @apply bg-gray-600 rounded-full;
}

::-webkit-scrollbar-corner {
  background-color: transparent;
}

[data-theme='dim'] .react-flow__controls-button {
  @apply bg-gray-800 hover:bg-gray-700 text-base-content border-gray-800 shadow;
}

.react-flow__controls-button {
  @apply bg-base-100 hover:bg-base-200 text-base-content border-gray-700;
}

[data-theme='dim'] .react-flow__panel {
  @apply flex flex-row;
}

.react-flow__controls svg {
  fill: currentColor;
}

.engraved-bg::after {
  content: "";
  background-image: url('/logo-bg.svg');
  filter: grayscale(100%) brightness(50%) contrast(200%);
  mix-blend-mode: multiply;
  /* Experiment with blend modes */
  opacity: 0.5;
  /* Adjust opacity for the engraving effect */

  /* Ensure the pseudo-element covers the whole element */
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 0;
}

.engraved-bg {
  position: relative;
  /* Required to position the pseudo-element */
  overflow: hidden;
  /* Ensures the pseudo-element does not extend beyond this container */
  /* Tailwind classes for styling can be added here */
}

.collapsing-height {
  max-height: 0;
  overflow: hidden;
  transition: max-height 0.5s ease-out;
}

.expanding-height {
  max-height: 1000px;
  /* Use a large max-height value */
  overflow: hidden;
  transition: max-height 0.5s ease-in;
}

.collapsing-width {
  max-width: 0;
  overflow: hidden;
  transition: max-width 0.5s ease-out, padding 0.5s ease-out, border 0.5s ease-out;
  padding: 0;
  border: 0;
  /* or use 'border-none' if you use utility classes */
}

.expanding-width {
  max-width: 1000px;
  /* Use a sensible max-width based on the expected expanded size */
  overflow: hidden;
  transition: max-width 0.5s ease-in, padding 0.5s ease-in, border 0.5s ease-in;
  /* If you had padding originally added, put those values here */
}

/* The default padding-left and padding-right of input-sm is too wide */
.input-sm {
  padding-left: 0.25rem;
  padding-right: 0% !important;
}